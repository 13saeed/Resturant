@using System;
@using Microsoft.AspNetCore.Identity
@using Microsoft.JSInterop
@using Resturant.Controllers
@inject UserManager<Users> UserManager;
@inject UserServices UserServices;
@inject IJSRuntime JSRuntime;

@{
    ViewData["Title"] = "پنل مدیریت";
    List<Users> users = new List<Users>();
    Users selectedUser = new Users();

    // Asynchronous initialization
    var task = Task.Run(async () =>
    {
        users = await UserServices.GetAllUsersAsync();
    });
    task.Wait();
}

<style>
    body, html {
    height: 100%;
    background-color: #393a3b;
    }

    #sidebar {
    height: 100vh;
    position: fixed;
    width: 250px;

    color: #fff;
    }

    #main-content {
    margin-left: 250px; /* Adjust this value based on the width of your sidebar */
    padding: 20px;
    }

    /* Custom hover effect for sidebar links */
    #sidebar .nav-link {
    color: #fff;
    transition: background-color 0.3s, color 0.3s;
    }

    #sidebar .nav-link:hover {
    background-color: #7d8185;
    color: #fff;
    }
    .justify-self-end{
    justify-self: end;
    }

    .justify-self-center {
    justify-self: center;
    }
    .w-70{
    width:70%;
    }
    .align-text-center{
    text-align:center;
    }

</style>


<nav id="sidebar" class="col-md-3 col-lg-2 d-md-block sidebar bg-dark fs-6">
    <div class="position-sticky">
        <ul class="nav flex-column m-2">
            <li class="nav-item">
                <a class="nav-link active" aria-current="page" href="/Home/DashboardAdmin">
                    <span data-feather="home"></span>
                    صفحه اصلی
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#ManageUsers">
                    <span data-feather="users"></span>
                    مدیریت کاربران
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">
                    مدیریت منو
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-controller="Account" asp-action="Logout">خروج</a>
            </li>
        </ul>
    </div>
</nav>

<h2 id="ManageUsers" class="text-center text-light pt-4 pe-3">مدیریت کاربران</h2>


<div class=" justify-self-end w-75 ps-5 py-4 ms-5">
    <div class="d-inline-flex align-items-baseline justify-content-end text-end w-100 ps-4 p-2">
        <button class="btn btn-primary" onclick="openAddModal()">Add User</button>
        <h6 class="text-light p-1">Add User</h6>
    </div>
    <table class="table table-dark table-striped table-hover table-bordered border-black align-text-center ">
        <thead>
            <tr>
                <th>fullname</th>
                <th>Username</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (users != null)
            {
                @foreach (var user in users)
                {
                    <tr>
                        <td>@user.FullName</td>
                        <td>@user.UserName</td>
                        <td>@user.Email</td>
                        <td>
                            <button class="btn btn-primary" onclick="openEditModal('@user.Id')" >Edit</button>
                            <button class="btn btn-danger" onclick="deleteUser('@user.Id')">Delete</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>



<div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog bg-dark" role="document">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="fullName">User Id</label>
                    <input type="text" class="form-control bg-dark-subtle" readonly id="userid" value="@selectedUser.Id">
                </div>
                <div class="form-group">
                    <label for="fullName">Full Name</label>
                    <input type="text" class="form-control bg-dark-subtle" id="fullName" value="@selectedUser.FullName">
                </div>
                <div class="form-group">
                    <label for="userName">Username</label>
                    <input type="text" class="form-control bg-dark-subtle" id="userName" value="@selectedUser.UserName">
                </div>
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" class="form-control bg-dark-subtle" id="email" value="@selectedUser.Email">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeModal()">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveUser()">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addUserModal" tabindex="-1" role="dialog" aria-labelledby="addUserModalLabel" aria-hidden="true">
    <div class="modal-dialog bg-dark" role="document">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h5 class="modal-title" id="addUserModalLabel">Add User</h5>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="addFullName">Full Name</label>
                    <input type="text" class="form-control bg-dark-subtle" id="addFullName">
                </div>
                <div class="form-group">
                    <label for="addUserName">Username</label>
                    <input type="text" class="form-control bg-dark-subtle" id="addUserName">
                </div>
                <div class="form-group">
                    <label for="addEmail">Email</label>
                    <input type="email" class="form-control bg-dark-subtle" id="addEmail">
                </div>
                <div class="form-group">
                    <label for="addPassword">Password</label>
                    <input type="password" class="form-control bg-dark-subtle" id="addPassword">
                </div>
                <div class="form-group">
                    <label for="addRole">Role</label>
                    <select class="form-control bg-dark-subtle" id="addRole">
                        <option value="User">User</option>
                        <option value="Admin">Admin</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeAddModal()">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveNewUser()">Save changes</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        function openEditModal(userId) {
            fetch(`/api/users/${userId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('userid').value = data.id;
                    document.getElementById('fullName').value = data.fullName;
                    document.getElementById('userName').value = data.userName;
                    document.getElementById('email').value = data.email;
                    $('#editUserModal').modal('show');
                })
                .catch(error => {
                    console.error('Failed to get user', error);
                    alert('Failed to get user.');
                });
        }

        function saveUser() {
            var userId = document.getElementById('userid').value;
            var fullName = document.getElementById('fullName').value;
            var userName = document.getElementById('userName').value;
            var email = document.getElementById('email').value;

            fetch(`/api/users/${userId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id: userId,
                    fullName: fullName,
                    userName: userName,
                    email: email
                })
            })
            .then(response => {
                if (response.ok) {
                    $('#editUserModal').modal('hide');
                    location.reload();
                } else {
                    console.error('Failed to save user');
                    alert('Failed to save user.');
                }
            })
            .catch(error => {
                console.error('Failed to save user', error);
                alert('Failed to save user.');
            });
        }

        function deleteUser(userId) {
            fetch(`/api/users/${userId}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    console.error('Failed to delete user');
                    alert('Failed to delete user.');
                }
            })
            .catch(error => {
                console.error('Failed to delete user', error);
                alert('Failed to delete user.');
            });
        }

        function reloadPage() {
            location.reload();
        }
        function closeModal() {
            $('#editUserModal').modal('hide');
        }
        function openAddModal() {
            $('#addUserModal').modal('show');
        }
        function closeAddModal() {
            $('#addUserModal').modal('hide');
        }
        function saveNewUser() {
            var fullName = document.getElementById('addFullName').value;
            var userName = document.getElementById('addUserName').value;
            var email = document.getElementById('addEmail').value;
            var password = document.getElementById('addPassword').value;
            var role = document.getElementById('addRole').value;
            fetch(`/api/users`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    fullName: fullName,
                    userName: userName,
                    email: email,
                    password: password,
                    role: role
                })
            })
            .then(response => {
                if (response.ok) {
                    $('#addUserModal').modal('hide');
                    location.reload();
                } else {
                    console.error('Failed to save user');
                    alert('Failed to save user.');
                }
            })
            .catch(error => {
                console.error('Failed to save user', error);
                alert('Failed to save user.');
            });
        }
    </script>
}

@functions {
    private List<Users> users = new List<Users>();
    private Users selectedUser = new Users();
    public async Task EditUser(string userId)
    {
        selectedUser = await UserServices.GetUserByIdAsync(userId);
        await JSRuntime.InvokeVoidAsync("openEditModal" , userId);
        
    }

    public async Task DeleteUser(string userId)
    {
        await UserServices.DeleteUserAsync(userId);
        users = await UserServices.GetAllUsersAsync();
        await JSRuntime.InvokeVoidAsync("location.reload");
    }
}
